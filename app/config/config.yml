imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: en

framework:
    #esi:             ~
    #translator:      { fallbacks: ["%locale%"] }
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  snc_redis.session.handler
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Assetic Configuration
assetic:
    debug:          "%kernel.debug%"
    use_controller: false
    bundles:        [ ]
    #java: /usr/bin/java
    filters:
        cssrewrite: ~
        #closure:
        #    jar: "%kernel.root_dir%/Resources/java/compiler.jar"
        #yui_css:
        #    jar: "%kernel.root_dir%/Resources/java/yuicompressor-2.4.7.jar"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_pgsql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    spool:     { type: memory }

sensio_framework_extra:
    view:
        annotations: false

fos_rest:
    param_fetcher_listener: true
    body_listener: true
    format_listener: true
    view:
        failed_validation: HTTP_BAD_REQUEST
        default_engine: twig
        view_response_listener: 'force'
        formats:
            rss: false
            xml: false
            json: true
    routing_loader:
        default_format: json

nelmio_api_doc:
    name: Api
    sandbox:
        request_format:
            formats:
                json: application/json

jms_serializer:
    metadata:
        auto_detection: true

snc_redis:
    clients:
        default:
            type: predis
            alias: default
            dsn: redis://localhost
            logging: %kernel.debug%
        cache:
            type: predis
            alias: cache
            dsn: redis://localhost/1
            options:
                profile: 2.2
                connection_timeout: 10
                read_write_timeout: 30
        session:
            type: predis
            alias: session
            dsn: redis://localhost/2
    session:
        client: session
        ttl: 1200
    doctrine:
        metadata_cache:
            client: cache
            entity_manager: default          # the name of your entity_manager connection
            document_manager: default        # the name of your document_manager connection
        result_cache:
            client: cache
            entity_manager: default  # you may specify multiple entity_managers
        query_cache:
            client: cache
            entity_manager: default

liip_imagine:
    resolvers:
       default:
          web_path: ~

    filter_sets:
        cache: ~
        logo_shop:
            quality: 100
            filters:
                thumbnail: { size: [200, 250], mode: outbound, format: png, cache_expires: 1 weeks }
        logo_shop_information:
            quality: 100
            filters:
                thumbnail: { size: [150, 150], mode: outbound, format: png, cache_expires: 1 weeks }
        avatar:
            quality: 100
            filters:
                thumbnail: { size: [200, 250], mode: outbound, format: png, cache_expires: 1 weeks }
        message_avatar:
            quality: 100
            filters:
                thumbnail: { size: [100, 100], mode: outbound, format: png, cache_expires: 1 weeks }
        mini_avatar:
            quality: 100
            filters:
                thumbnail: { size: [50, 50], mode: outbound, format: png, cache_expires: 1 weeks }
        advertisingSliderPlatform:
            quality: 100
            filters:
                thumbnail: { size: [1140, 250], mode: outbound, format: png, cache_expires: 1 weeks }
        advertisingSideOf:
            quality: 100
            filters:
                thumbnail: { size: [100, 100], mode: outbound, format: png, cache_expires: 1 weeks }
        product_image:
            quality: 100
            filters:
                thumbnail: { size: [250, 385], mode: outbound, format: png, cache_expires: 1 weeks }
        main_product_image:
            quality: 100
            filters:
                thumbnail: { size: [300, 350], mode: outbound, format: png, cache_expires: 1 weeks }
        upload_product_image:
            quality: 100
            filters:
                thumbnail: { size: [150, 150], mode: outbound, format: png, cache_expires: 1 weeks }

# FOS
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: User\UserBundle\Entity\Users

# HWI
hwi_oauth:
    firewall_name: main
    resource_owners:
        vkontakte:
            type:                vkontakte
            client_id:           "%vk_client%"
            client_secret:       "%vk_secret%"
            scope:               offline,friends,groups,stats
        instagram:
            type:                instagram
            client_id:           "%instagram_client%"
            client_secret:       "%instagram_secret%"
    fosub:
        # try 30 times to check if a username is available (foo, foo1, foo2 etc)
        username_iterations: 30
        # mapping between resource owners (see below) and properties
        properties:
            vkontakte: vkontakte
            instagram: instagram
    http_client:
        timeout:       5
        verify_peer:   true
        ignore_errors: true
        max_redirects: 5


old_sound_rabbit_mq:
    connections:
        default:
            host:     'localhost'
            port:     5672
            user:     'guest'
            password: 'guest'
            vhost:    '/'
            lazy:     false
            connection_timeout: 3
            read_write_timeout: 3

            # requires php-amqplib v2.4.1+ and PHP5.4+
            keepalive: false

            # requires php-amqplib v2.4.1+
            heartbeat: 0
    producers:
        message_user:
            connection:       default
            exchange_options: {name: 'message', type: direct}
        check_read:
            connection:       default
            exchange_options: {name: 'check-read', type: direct}

    consumers:
        message_user:
            connection:       default
            exchange_options: {name: 'message', type: direct}
            queue_options:    {name: 'message'}
            callback:         message.user
            qos_options:      {prefetch_size: 0, prefetch_count: 1, global: false}
        check_read:
            connection:       default
            exchange_options: {name: 'check-read', type: direct}
            queue_options:    {name: 'check-read'}
            callback:         check.read
            qos_options:      {prefetch_size: 0, prefetch_count: 1, global: false}