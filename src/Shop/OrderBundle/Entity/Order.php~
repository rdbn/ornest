<?php

/**
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
namespace Shop\OrderBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * @ORM\Entity
 * @ORM\Table(name="`order`")
 */

class Order
{   
    /**
     * @ORM\Id
     * @ORM\Column(name="id", type="integer")
     * @ORM\GeneratedValue(strategy="AUTO")
     */
    protected $id;

    /**
     * @ORM\ManyToOne(targetEntity="Shop\OrderBundle\Entity\Address", inversedBy="order")
     * @ORM\JoinColumn(name="address_id", nullable=true)
     */
    protected $address;

    /**
     * @ORM\ManyToOne(targetEntity="User\UserBundle\Entity\Users", inversedBy="order")
     * @ORM\JoinColumn(name="users_id", nullable=true)
     */
    protected $users;

    /**
     * @ORM\ManyToOne(targetEntity="Shop\CreateBundle\Entity\Shops", inversedBy="order")
     * @ORM\JoinColumn(name="shops_id", nullable=true)
     */
    protected $shops;

    /**
     * @ORM\ManyToOne(targetEntity="Shop\CreateBundle\Entity\ShopsDelivery", inversedBy="order")
     * @ORM\JoinColumn(name="delivery_id", nullable=true)
     */
    protected $delivery;

    /**
     * @ORM\Column(name="amount", type="decimal", precision=6, scale=2, nullable=true)
     */
    protected $amount;

    /**
     * @ORM\Column(name="is_create_order", type="boolean", options={"default" = FALSE})
     */
    protected $isCreateOrder;
    
    /** 
     * @ORM\Column(name="is_pay", type="boolean", options={"default" = FALSE})
     */
    protected $isPay;
    
    /**
     * @ORM\Column(name="created_at", type="datetime")
     */
    protected $createdAt;

    /**
     * @ORM\OneToMany(targetEntity="Shop\OrderBundle\Entity\OrderItem", mappedBy="order", cascade={"persist"})
     */
    protected $orderItem;
    
    /**
     * constructor
     */
    public function __construct()
    {
        $this->amount = 100;
        $this->checkPay = false;

        $this->createdAt = new \DateTime();
        $this->orderItem = new ArrayCollection();
    }
}
